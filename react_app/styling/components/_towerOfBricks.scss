$towerWidth: 20em;
$towerHeight: 30em;
$mortarWidth: 5%;
$bricksTotal: 12;
$rowsTotal: 6;
$totalDropTime: (($bricksTotal - 1) * 90ms) + (35ms + 50ms);

.towerOfBricksContainer {
    display: flex;
    flex-wrap: wrap;
    position: absolute;
    top: $cloudDistanceFromTopAfterAnimation;
    right: 8vw;
    margin-top: $cloudHeight + 6rem;
    width: $towerWidth;
    height: $towerHeight;
    overflow: hidden;
    clip: rect(-8em,$towerWidth,$towerHeight,0px);


    // Entering the page animations
    .emptyhome &.router-appear-active {
        animation-delay: 0.45s;
        animation: towerOfBricksLocationAfterDrop 1.4s ease $totalDropTime backwards;
    }

    .categoryhome &.router-enter {
        animation-delay: 0s;
        animation: towerOfBricksMoveOffScreen 0.4s ease-in alternate-reverse backwards;
    }

    // Exiting
    .homecategory &.router-exit-active {
        transform-origin: top;
        animation: towerOfBricksMoveOffScreen 0.4s ease-in both;
    }

    // Decendants

    .real.brick {
        display: block;
        overflow: hidden;
    }

    .brick{

        h2 {
            text-align: center;
            position: absolute;
            width: 100%;
            top: 50%;
            transform: translateY(-50%);
            margin:0;
            a {
                transition: all 1s;
                transition-delay: 0.6s;
            }
        }

        position: relative;
        width: 33% - $mortarWidth;
        height: (1/6)*100%;
        margin: 0 $mortarWidth $mortarWidth 0;
        border-radius: 0.9em;
        background-color: white;
        color: black;

        &:nth-child(4n), &:nth-child(4n+1) {
            width: 67% - $mortarWidth;
        }

        .emptyhome & {
            @for $brickNum from 1 to $bricksTotal {
                $brickRow: $rowsTotal - floor(($bricksTotal - $brickNum)/2);
                &:nth-child(#{$brickNum}) {
                    animation-name: brickDropInAnimation#{$brickRow};
                    animation-delay: (($bricksTotal - $brickNum) * 90ms); 
                    animation-duration: ($brickRow * 35ms) + 50ms;
                    animation-timing-function: cubic-bezier(.46,-0.07,.32,.56);
                    animation-fill-mode: backwards;
                    @include brickDropInAnimation($brickRow, $rowsTotal);
                }
            }
        }
    }

    .brick a{
        color: #000000;
        text-decoration: none;
        animation: brickTextAppears 1.2s ease 0.25s backwards;
        .emptyhome & {
            animation: brickTextAppears 1s ease ($brickfall-animation-duration + 0.2s) backwards;
        }
    }
    
}

.home.compactWidth .towerOfBricksContainer {
    position: relative;
    top: auto;
    left: 0;
    right: 0;
    transform: scale(1.2);
    padding-left: $mortarWidth/2;
    overflow-x: hidden;
    transform-origin: top center;
    margin: auto;
    margin-top: 2em;

    @media screen and (max-width: 500px) {
        transform: scale(1.1);
    }
    @media screen and (max-width: 400px) {
        transform: scale(1);
    }
}