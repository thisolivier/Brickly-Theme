@keyframes cloudHomeAppearence {
  0% {
    opacity: 0;
    left: 50vw;
    top: 20vh;
    transform: translateX(-50%) scale(0.7);
    margin-top: 0em;
  }

  20%, 50% {
    opacity: 1;
    top: 20vh;
    left: 50vw;
    transform: translateX(-50%) scale(0.7);
    margin-top: 0em;
  }

  100% { // Use css-transition-group to delay the rendering of the cloud by 0.2s, immediaqte fade in. The entry period lasts the $brickanimationduration time, and once it's gone, we move the cloud
    left: 2em;
    top: 0vh;
    transform: translateX(0) scale(1);
    margin-top: $cloudDistanceFromTopAfterAnimation;
  }
}
// With the cloud, use the appearing to handle the stationary part, then trigger the movement on appeared
// Appeared maybe shouldn't have a from, only a to? Is that possible?
@keyframes cloudTextAppear {
  from {
    margin-left: 2em;
    margin-right: 2em;
  }

  to {
    margin-left: 0em;
    margin-right: 0em;
  }
}

@keyframes cloudPositionCategoryAppears {
  from {
    left: 2em;
    top: 0em;
    transform: scale(1);
    margin-top: $cloudDistanceFromTopAfterAnimation;
  }

  to {
    top: 1em;
    left: 2em;
    transform: scale(0.5);
  }
}

@keyframes sidebarDropdown {
  0% {
    opacity: 0;
    transform: translateY(-100%);
  }

  65% {
    opacity: 0;
  }

  100% {
    opacity: 1;
    transform: translateY(0%);
  }
}

@keyframes cloudDropdownCategoryAppear {
  0% {
    opacity: 0;
    transform: translateY(-100%) scale(0.5);
  }

  65% {
    opacity: 0;
  }

  100% {
    opacity: 1;
    transform: translateY(0%) scale(0.5);
  }
}

@keyframes towerOfBricksLocationAfterDrop {
  from {
    top: 0vh; // TODO: Fix this, your transform origin may be wrong
    right: 50vw;
    margin-top: $cloudHeight + 6rem;
    transform: translateX(50%) scale(0.4);
  }

  to {
    top: $cloudDistanceFromTopAfterAnimation;
    margin-top: $cloudHeight + 6rem;
    right: 8vw;
    transform: initial;
  }
}

@keyframes towerOfBricksMoveOffScreen {
  0% {
    opacity: 1;
    transform: initial
  }

  50% {
    opacity: 1
  }

  100% {
    opacity: 0;
    transform: translateX(25em) scale(0.8);
  }
}

  @keyframes brickTextAppears {
  from {
    color: #ffffff;
    opacity: 0.0;
  }

  to {
    color: #000000;
    opacity: 1.0;
  }
}

  @mixin brickDropInAnimation($brickRow, $rowsTotal) {
    @keyframes brickDropInAnimation#{$brickRow} {
      from {
        transform: translateY( -600% / ($rowsTotal - $brickRow) );
        opacity: 0;
      }
      
      to {
        transform: translateY(0%);
        opacity: 1;
      }
    }
  }

  @keyframes categoryPageAppears {
    from {
      transform: translateY(100vh);
      opacity: 0;
    }
    
    to {
      transform: translateY(0vh);
      opacity: 1;
    }
  }

  @keyframes opacityIn {
    from {
      transform: translateY(-5vh);
      opacity: 0;
    }
    
    to {
      transform: translateY(0vh);
      opacity: 1;
    }
  }