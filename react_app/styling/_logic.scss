// This file should not refrence any variables directly

// Pass a unitless base percentage, and what percentage of that you want.
// Returns value in pixels
@function relate ($base, $toFix) {
  @return ($toFix * $base * 0.01vw);
}

@mixin inlineButton {
  display: inline-block;
  margin: .25em;
  font-size: 1em;
  border-radius: .4em;
  padding: .1em .4em;
}

// Responsive media queries
@mixin tiny {
  @media (max-width: #{$tiny-width}) {
    @content;
  }
}

@mixin small {
  @media (max-width: #{$small-width}) {
    @content;
  }
}

@mixin medium {
  @media (max-width: #{$medium-width}) {
    @content;
  }
}

@mixin large {
  @media (min-width: #{$medium-width}) {
    @content;
  }
}

@mixin huge {
  @media (min-width: #{$large-width}) {
    @content;
  }
}

// Animations of eyesAfter and eyesAfterHover
$pupil-size: 0.7;
@mixin eye($side){
    $opside: if($side=='left', 'right', 'left');
    content: '\25CF';
    display: block;
    position: absolute;
    font-size: #{$pupil-size}em;
    #{$side}: 0.5em;
    top: 50%;
    margin-top: -0.72em;
    width: #{1/$pupil-size}em;
    height: #{1/$pupil-size}em;
    max-height: #{1/$pupil-size}em;
    line-height: #{$pupil-size * 2}em;
    color: $black;
    background-color: $white;
    border-radius: 1000px;
    border-color: black;
    border-style: solid;
    border-width: 0;
    overflow: hidden;
    text-align: #{$opside};
    transform: rotate(180deg);
    box-sizing: border-box;
  }
  @mixin eyeHover{
    animation-name: blink;
    animation-duration: 3s;
    animation-iteration-count: 1;
    animation-delay: 0.1s;
    animation-timing-function: ease-in-out;
  }

  @keyframes blink {
    0% {
      border-width: 0 0 0 0;
    }
    10% {
      border-width: 0 0 #{0.8/$pupil-size}em 0;
    }
    15% {
      border-width: 0 0 #{1/$pupil-size}em 0;
    }
    25% {
      border-width: 0 0 #{1/$pupil-size}em 0;
    }
    40% {
      border-width: 0 0 0 0;
    }
    43% {
      border-width: 0 0 0 0;
    }
    50% {
      border-width: 0 0 #{0.8/$pupil-size}em 0;
    }
    65% {
      border-width: 0 0 #{1/$pupil-size}em 0;
    }
    90% {
      border-width: 0 0 #{0.8/$pupil-size}em 0;
    }
    100% {
      border-width: 0 0 0 0;
    }
  }
